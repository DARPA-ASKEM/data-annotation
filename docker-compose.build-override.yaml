services:
  airflow-init:
    networks:
      - world-modelers
  airflow-redis:
    networks:
      - world-modelers
  airflow-postgres:
    networks:
      - world-modelers
  airflow-scheduler:
    networks:
      - world-modelers
  airflow-webserver:
    networks:
      - world-modelers
  airflow-worker:
    networks:
      - world-modelers
  flower:
    networks:
      - world-modelers
  app:
    command:
      - python3
      - manage.py
      - runserver
      - 0.0.0.0:8000
    env_file:
      - envfile
    networks:
      - world-modelers
  shorthand-app:
    env_file:
      - envfile
    environment:
      - DOJO_HOST
    networks:
      - world-modelers
  api:
    command: ["uvicorn", "server:api", "--host", "0.0.0.0", "--port", "80", "--reload", "--reload-dir", "src", "--log-config", "logging.yaml"]
    volumes:
      - ./dojo/api:/api
    env_file:
      - envfile
    environment:
      - DOJO_URL
      - DMC_URL
      - REDIS_HOST
      - DOCKERHUB_USER
      - DOCKERHUB_PWD
    networks:
      - world-modelers
  cato:
    command: -debug -pull-images=false
    build:
      context: ./clouseau
      dockerfile: cato/Dockerfile
    image: jataware/clouseau:cato-dev
    volumes:
      - ${PWD}/clouseau/claudine/server/settings.yaml:/home/app/cato/settings.yaml:rw
    env_file:
      - envfile
    networks:
      - world-modelers
  kibana:
    env_file:
      - envfile
    networks:
      - world-modelers
  elasticsearch:
    env_file:
      - envfile
    networks:
      - world-modelers
  redis:
    env_file:
      - envfile
    networks:
      - world-modelers
  socat:
    env_file:
      - envfile
    networks:
      - world-modelers
  docker:
    env_file:
      - envfile
    networks:
      - world-modelers
  phantom:
    build:
      context: ./phantom/
      dockerfile: Dockerfile.dev
    container_name: phantom
    env_file:
      - envfile
    volumes:
      - "./phantom/ui:/ui"
    expose:
      - 8080
    ports:
      - "8080:8080"
    command:
      - npx
      - webpack
      - serve
      - --mode
      - development
      - --config
      - ./webpack.config.dev.js
      - --host
      - 0.0.0.0
    networks:
      - world-modelers


networks:
  world-modelers:
    driver: bridge
    name: world-modelers

